// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id              Int                 @id @default(autoincrement())
    email           String              @unique
    firstName       String
    lastName        String
    password        String
    admin           Boolean             @default(false)
    superAdmin      Boolean             @default(false)
    posts           Post[]
    postsLiked      LikesOnPosts[]
    comments        Comment[]
    commentsLiked   LikesOnComments[]
}

model Post {
    id          Int             @id @default(autoincrement())
    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
    text        String          @db.Text
    author      User            @relation(fields: [authorId], references: [id], onDelete: Cascade)
    authorId    Int             
    likes       LikesOnPosts[]
    comments    Comment[]

    @@unique(fields: [id, authorId], name: "postIdAuthorId")
}

model Comment {
    id          Int                 @id @default(autoincrement())
    createdAt   DateTime            @default(now())
    updatedAt   DateTime            @updatedAt
    text        String              @db.Text
    author      User?               @relation(fields: [authorId], references: [id], onDelete: SetNull)
    authorId    Int?
    post        Post                @relation(fields: [postId], references: [id], onDelete: Cascade)
    postId      Int
    likes       LikesOnComments[]

    @@unique([id, authorId], name: "commentIdAuthorId")
}

model LikesOnPosts {
    user    User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId  Int
    post    Post @relation(fields: [postId], references: [id], onDelete: Cascade)
    postId  Int

    @@id([userId, postId])
}

model LikesOnComments {
    user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId      Int
    comment     Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
    commentId   Int

    @@id([userId, commentId])
}